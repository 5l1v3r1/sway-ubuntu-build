<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
  <!ENTITY % gtkdocentities SYSTEM "../xml/gtkdocentities.ent">
  %gtkdocentities;
]>
<refentry id="NMAWifiDialog">
<refmeta>
<refentrytitle role="top_of_page" id="NMAWifiDialog.top_of_page">NMAWifiDialog</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBNMA Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>NMAWifiDialog</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="NMAWifiDialog.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="nma-wifi-dialog-new">nma_wifi_dialog_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="nma-wifi-dialog-new-for-secrets">nma_wifi_dialog_new_for_secrets</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="nma-wifi-dialog-new-for-hidden">nma_wifi_dialog_new_for_hidden</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="nma-wifi-dialog-new-for-create">nma_wifi_dialog_new_for_create</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="NMConnection"><returnvalue>NMConnection</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="nma-wifi-dialog-get-connection">nma_wifi_dialog_get_connection</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="nma-wifi-dialog-nag-user">nma_wifi_dialog_nag_user</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="nma-wifi-dialog-set-nag-ignored">nma_wifi_dialog_set_nag_ignored</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="nma-wifi-dialog-get-nag-ignored">nma_wifi_dialog_get_nag_ignored</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="nma-wifi-dialog-new-for-other">nma_wifi_dialog_new_for_other</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="NMAWifiDialog.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GtkWidget">GtkWidget</link>
            <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GtkContainer">GtkContainer</link>
                <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GtkBin">GtkBin</link>
                    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GtkWindow">GtkWindow</link>
                        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="GtkDialog">GtkDialog</link>
                            <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> NMAWifiDialog
</screen>
</refsect1>


<refsect1 id="NMAWifiDialog.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="NMAWifiDialog.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="nma-wifi-dialog-new" role="function">
<title>nma_wifi_dialog_new&#160;()</title>
<indexterm zone="nma-wifi-dialog-new"><primary>nma_wifi_dialog_new</primary></indexterm>
<programlisting language="C"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
nma_wifi_dialog_new (<parameter><link linkend="NMClient"><type>NMClient</type></link> *client</parameter>,
                     <parameter><link linkend="NMConnection"><type>NMConnection</type></link> *connection</parameter>,
                     <parameter><link linkend="NMDevice"><type>NMDevice</type></link> *device</parameter>,
                     <parameter><link linkend="NMAccessPoint"><type>NMAccessPoint</type></link> *ap</parameter>,
                     <parameter><link linkend="gboolean"><type>gboolean</type></link> secrets_only</parameter>);</programlisting>
<para>Creates a wifi connection dialog and populates it with settings from
<parameter>connection</parameter>
 if given.  If <parameter>device</parameter>
 is not given a device selection combo box
will be included.  If <parameter>connection</parameter>
 is not given a connection selection combo
box will be included.  If <parameter>secrets_only</parameter>
 is <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> a complete connection
creator/editor dialog is returned, otherwise only wifi security secrets
relevant to the security settings in <parameter>connection</parameter>
 are going to be shown and
will be editable.</para>
<refsect3 id="nma-wifi-dialog-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>client</para></entry>
<entry role="parameter_description"><para>client to retrieve list of devices or connections from</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>connection to be shown/edited or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>device</para></entry>
<entry role="parameter_description"><para>device to check connection compatibility against</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ap</para></entry>
<entry role="parameter_description"><para>AP to check connection compatibility against</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>secrets_only</para></entry>
<entry role="parameter_description"><para>whether to only ask for secrets for given connection</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="nma-wifi-dialog-new.returns" role="returns">
<title>Returns</title>
<para> the dialog widget or <link linkend="NULL:CAPS"><literal>NULL</literal></link> in case of error</para>
</refsect3></refsect2>
<refsect2 id="nma-wifi-dialog-new-for-secrets" role="function">
<title>nma_wifi_dialog_new_for_secrets&#160;()</title>
<indexterm zone="nma-wifi-dialog-new-for-secrets"><primary>nma_wifi_dialog_new_for_secrets</primary></indexterm>
<programlisting language="C"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
nma_wifi_dialog_new_for_secrets (<parameter><link linkend="NMClient"><type>NMClient</type></link> *client</parameter>,
                                 <parameter><link linkend="NMConnection"><type>NMConnection</type></link> *connection</parameter>,
                                 <parameter>const <link linkend="char"><type>char</type></link> *secrets_setting_name</parameter>,
                                 <parameter>const <link linkend="char"><type>char</type></link> *const*secrets_hints</parameter>);</programlisting>
<para>Creates a wifi secrets dialog and populates it with setting values from
<parameter>connection</parameter>
.  If <parameter>secrets_setting_name</parameter>
 and <parameter>secrets_hints</parameter>
 are not given
this function creates an identical dialog as <link linkend="nma-wifi-dialog-new"><function>nma_wifi_dialog_new()</function></link> would
create with the <parameter>secrets_only</parameter>
 parameter <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.  Otherwise
<parameter>secrets_setting_name</parameter>
 and <parameter>secrets_hints</parameter>
 determine the list of specific
secrets that are being requested from the user and no editable entries
are shown for any other settings.</para>
<para>Note: only a subset of all settings and setting keys is supported as
<parameter>secrets_setting_name</parameter>
 and <parameter>secrets_hints</parameter>
.</para>
<refsect3 id="nma-wifi-dialog-new-for-secrets.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>client</para></entry>
<entry role="parameter_description"><para>client to retrieve list of devices or connections from</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>connection</para></entry>
<entry role="parameter_description"><para>connection for which secrets are requested</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>secrets_setting_name</para></entry>
<entry role="parameter_description"><para>setting name whose secrets are requested
or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>secrets_hints</para></entry>
<entry role="parameter_description"><para>array of setting key names within the setting given in
<parameter>secrets_setting_name</parameter>
which are requested or <link linkend="NULL:CAPS"><literal>NULL</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="nma-wifi-dialog-new-for-secrets.returns" role="returns">
<title>Returns</title>
<para> the dialog widget or <link linkend="NULL:CAPS"><literal>NULL</literal></link> in case of error</para>
</refsect3></refsect2>
<refsect2 id="nma-wifi-dialog-new-for-hidden" role="function">
<title>nma_wifi_dialog_new_for_hidden&#160;()</title>
<indexterm zone="nma-wifi-dialog-new-for-hidden"><primary>nma_wifi_dialog_new_for_hidden</primary></indexterm>
<programlisting language="C"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
nma_wifi_dialog_new_for_hidden (<parameter><link linkend="NMClient"><type>NMClient</type></link> *client</parameter>);</programlisting>
</refsect2>
<refsect2 id="nma-wifi-dialog-new-for-create" role="function">
<title>nma_wifi_dialog_new_for_create&#160;()</title>
<indexterm zone="nma-wifi-dialog-new-for-create"><primary>nma_wifi_dialog_new_for_create</primary></indexterm>
<programlisting language="C"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
nma_wifi_dialog_new_for_create (<parameter><link linkend="NMClient"><type>NMClient</type></link> *client</parameter>);</programlisting>
</refsect2>
<refsect2 id="nma-wifi-dialog-get-connection" role="function">
<title>nma_wifi_dialog_get_connection&#160;()</title>
<indexterm zone="nma-wifi-dialog-get-connection"><primary>nma_wifi_dialog_get_connection</primary></indexterm>
<programlisting language="C"><link linkend="NMConnection"><returnvalue>NMConnection</returnvalue></link>&#160;*
nma_wifi_dialog_get_connection (<parameter><link linkend="NMAWifiDialog"><type>NMAWifiDialog</type></link> *self</parameter>,
                                <parameter><link linkend="NMDevice"><type>NMDevice</type></link> **device</parameter>,
                                <parameter><link linkend="NMAccessPoint"><type>NMAccessPoint</type></link> **ap</parameter>);</programlisting>
<refsect3 id="nma-wifi-dialog-get-connection.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>an <link linkend="NMAWifiDialog"><type>NMAWifiDialog</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>device</para></entry>
<entry role="parameter_description"><para>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>ap</para></entry>
<entry role="parameter_description"><para>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="nma-wifi-dialog-get-connection.returns" role="returns">
<title>Returns</title>
<para>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="nma-wifi-dialog-nag-user" role="function" condition="deprecated:">
<title>nma_wifi_dialog_nag_user&#160;()</title>
<indexterm zone="nma-wifi-dialog-nag-user" role="deprecated"><primary>nma_wifi_dialog_nag_user</primary></indexterm>
<programlisting language="C"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
nma_wifi_dialog_nag_user (<parameter><link linkend="NMAWifiDialog"><type>NMAWifiDialog</type></link> *self</parameter>);</programlisting>
<warning><para><literal>nma_wifi_dialog_nag_user</literal> is deprecated and should not be used in newly-written code.</para></warning>
<refsect3 id="nma-wifi-dialog-nag-user.returns" role="returns">
<title>Returns</title>
<para>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="nma-wifi-dialog-set-nag-ignored" role="function" condition="deprecated:">
<title>nma_wifi_dialog_set_nag_ignored&#160;()</title>
<indexterm zone="nma-wifi-dialog-set-nag-ignored" role="deprecated"><primary>nma_wifi_dialog_set_nag_ignored</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
nma_wifi_dialog_set_nag_ignored (<parameter><link linkend="NMAWifiDialog"><type>NMAWifiDialog</type></link> *self</parameter>,
                                 <parameter><link linkend="gboolean"><type>gboolean</type></link> ignored</parameter>);</programlisting>
<warning><para><literal>nma_wifi_dialog_set_nag_ignored</literal> is deprecated and should not be used in newly-written code.</para></warning>
</refsect2>
<refsect2 id="nma-wifi-dialog-get-nag-ignored" role="function" condition="deprecated:">
<title>nma_wifi_dialog_get_nag_ignored&#160;()</title>
<indexterm zone="nma-wifi-dialog-get-nag-ignored" role="deprecated"><primary>nma_wifi_dialog_get_nag_ignored</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
nma_wifi_dialog_get_nag_ignored (<parameter><link linkend="NMAWifiDialog"><type>NMAWifiDialog</type></link> *self</parameter>);</programlisting>
<warning><para><literal>nma_wifi_dialog_get_nag_ignored</literal> is deprecated and should not be used in newly-written code.</para></warning>
</refsect2>
<refsect2 id="nma-wifi-dialog-new-for-other" role="function" condition="deprecated:">
<title>nma_wifi_dialog_new_for_other&#160;()</title>
<indexterm zone="nma-wifi-dialog-new-for-other" role="deprecated"><primary>nma_wifi_dialog_new_for_other</primary></indexterm>
<programlisting language="C"><link linkend="GtkWidget"><returnvalue>GtkWidget</returnvalue></link>&#160;*
nma_wifi_dialog_new_for_other (<parameter><link linkend="NMClient"><type>NMClient</type></link> *client</parameter>);</programlisting>
<warning><para><literal>nma_wifi_dialog_new_for_other</literal> is deprecated and should not be used in newly-written code.</para></warning>
</refsect2>

</refsect1>
<refsect1 id="NMAWifiDialog.other_details" role="details">
<title role="details.title">Types and Values</title>

</refsect1>

</refentry>
