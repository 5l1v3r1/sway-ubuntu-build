<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
  <!ENTITY % gtkdocentities SYSTEM "../xml/gtkdocentities.ent">
  %gtkdocentities;
]>
<refentry id="libnma-qrcodegen">
<refmeta>
<refentrytitle role="top_of_page" id="libnma-qrcodegen.top_of_page">qrcodegen</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBNMA Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>qrcodegen</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="libnma-qrcodegen.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_proto_type" colwidth="150px"/>
<colspec colname="functions_proto_name"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="qrcodegen-BUFFER-LEN-FOR-VERSION">qrcodegen_BUFFER_LEN_FOR_VERSION</link><phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="bool"><returnvalue>bool</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-encodeText">qrcodegen_encodeText</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="bool"><returnvalue>bool</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-encodeBinary">qrcodegen_encodeBinary</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="bool"><returnvalue>bool</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-encodeSegments">qrcodegen_encodeSegments</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="bool"><returnvalue>bool</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-encodeSegmentsAdvanced">qrcodegen_encodeSegmentsAdvanced</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="bool"><returnvalue>bool</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-isAlphanumeric">qrcodegen_isAlphanumeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="bool"><returnvalue>bool</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-isNumeric">qrcodegen_isNumeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="size-t"><returnvalue>size_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-calcSegmentBufferSize">qrcodegen_calcSegmentBufferSize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">struct <link linkend="qrcodegen-Segment"><returnvalue>qrcodegen_Segment</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-makeBytes">qrcodegen_makeBytes</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">struct <link linkend="qrcodegen-Segment"><returnvalue>qrcodegen_Segment</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-makeNumeric">qrcodegen_makeNumeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">struct <link linkend="qrcodegen-Segment"><returnvalue>qrcodegen_Segment</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-makeAlphanumeric">qrcodegen_makeAlphanumeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">struct <link linkend="qrcodegen-Segment"><returnvalue>qrcodegen_Segment</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-makeEci">qrcodegen_makeEci</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-getSize">qrcodegen_getSize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="bool"><returnvalue>bool</returnvalue></link>
</entry><entry role="function_name"><link linkend="qrcodegen-getModule">qrcodegen_getModule</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="libnma-qrcodegen.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="other_proto_type" colwidth="150px"/>
<colspec colname="other_proto_name"/>
<tbody>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="qrcodegen-Ecc">qrcodegen_Ecc</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="qrcodegen-Mask">qrcodegen_Mask</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="qrcodegen-Mode">qrcodegen_Mode</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="qrcodegen-Segment">qrcodegen_Segment</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="qrcodegen-VERSION-MIN">qrcodegen_VERSION_MIN</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="qrcodegen-VERSION-MAX">qrcodegen_VERSION_MAX</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="qrcodegen-BUFFER-LEN-MAX">qrcodegen_BUFFER_LEN_MAX</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="libnma-qrcodegen.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="libnma-qrcodegen.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="qrcodegen-BUFFER-LEN-FOR-VERSION" role="macro">
<title>qrcodegen_BUFFER_LEN_FOR_VERSION()</title>
<indexterm zone="qrcodegen-BUFFER-LEN-FOR-VERSION"><primary>qrcodegen_BUFFER_LEN_FOR_VERSION</primary></indexterm>
<programlisting language="C">#define qrcodegen_BUFFER_LEN_FOR_VERSION(n)  ((((n) * 4 + 17) * ((n) * 4 + 17) + 7) / 8 + 1)
</programlisting>
</refsect2>
<refsect2 id="qrcodegen-encodeText" role="function">
<title>qrcodegen_encodeText&#160;()</title>
<indexterm zone="qrcodegen-encodeText"><primary>qrcodegen_encodeText</primary></indexterm>
<programlisting language="C"><link linkend="bool"><returnvalue>bool</returnvalue></link>
qrcodegen_encodeText (<parameter>const <link linkend="char"><type>char</type></link> *text</parameter>,
                      <parameter><link linkend="uint8-t"><type>uint8_t</type></link> tempBuffer[]</parameter>,
                      <parameter><link linkend="uint8-t"><type>uint8_t</type></link> qrcode[]</parameter>,
                      <parameter><type>enum qrcodegen_Ecc</type> ecl</parameter>,
                      <parameter><link linkend="int"><type>int</type></link> minVersion</parameter>,
                      <parameter><link linkend="int"><type>int</type></link> maxVersion</parameter>,
                      <parameter><type>enum qrcodegen_Mask</type> mask</parameter>,
                      <parameter><link linkend="bool"><type>bool</type></link> boostEcl</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-encodeBinary" role="function">
<title>qrcodegen_encodeBinary&#160;()</title>
<indexterm zone="qrcodegen-encodeBinary"><primary>qrcodegen_encodeBinary</primary></indexterm>
<programlisting language="C"><link linkend="bool"><returnvalue>bool</returnvalue></link>
qrcodegen_encodeBinary (<parameter><link linkend="uint8-t"><type>uint8_t</type></link> dataAndTemp[]</parameter>,
                        <parameter><link linkend="size-t"><type>size_t</type></link> dataLen</parameter>,
                        <parameter><link linkend="uint8-t"><type>uint8_t</type></link> qrcode[]</parameter>,
                        <parameter><type>enum qrcodegen_Ecc</type> ecl</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> minVersion</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> maxVersion</parameter>,
                        <parameter><type>enum qrcodegen_Mask</type> mask</parameter>,
                        <parameter><link linkend="bool"><type>bool</type></link> boostEcl</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-encodeSegments" role="function">
<title>qrcodegen_encodeSegments&#160;()</title>
<indexterm zone="qrcodegen-encodeSegments"><primary>qrcodegen_encodeSegments</primary></indexterm>
<programlisting language="C"><link linkend="bool"><returnvalue>bool</returnvalue></link>
qrcodegen_encodeSegments (<parameter>const <type>struct qrcodegen_Segment</type> segs[]</parameter>,
                          <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>,
                          <parameter><type>enum qrcodegen_Ecc</type> ecl</parameter>,
                          <parameter><link linkend="uint8-t"><type>uint8_t</type></link> tempBuffer[]</parameter>,
                          <parameter><link linkend="uint8-t"><type>uint8_t</type></link> qrcode[]</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-encodeSegmentsAdvanced" role="function">
<title>qrcodegen_encodeSegmentsAdvanced&#160;()</title>
<indexterm zone="qrcodegen-encodeSegmentsAdvanced"><primary>qrcodegen_encodeSegmentsAdvanced</primary></indexterm>
<programlisting language="C"><link linkend="bool"><returnvalue>bool</returnvalue></link>
qrcodegen_encodeSegmentsAdvanced (<parameter>const <type>struct qrcodegen_Segment</type> segs[]</parameter>,
                                  <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>,
                                  <parameter><type>enum qrcodegen_Ecc</type> ecl</parameter>,
                                  <parameter><link linkend="int"><type>int</type></link> minVersion</parameter>,
                                  <parameter><link linkend="int"><type>int</type></link> maxVersion</parameter>,
                                  <parameter><link linkend="int"><type>int</type></link> mask</parameter>,
                                  <parameter><link linkend="bool"><type>bool</type></link> boostEcl</parameter>,
                                  <parameter><link linkend="uint8-t"><type>uint8_t</type></link> tempBuffer[]</parameter>,
                                  <parameter><link linkend="uint8-t"><type>uint8_t</type></link> qrcode[]</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-isAlphanumeric" role="function">
<title>qrcodegen_isAlphanumeric&#160;()</title>
<indexterm zone="qrcodegen-isAlphanumeric"><primary>qrcodegen_isAlphanumeric</primary></indexterm>
<programlisting language="C"><link linkend="bool"><returnvalue>bool</returnvalue></link>
qrcodegen_isAlphanumeric (<parameter>const <link linkend="char"><type>char</type></link> *text</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-isNumeric" role="function">
<title>qrcodegen_isNumeric&#160;()</title>
<indexterm zone="qrcodegen-isNumeric"><primary>qrcodegen_isNumeric</primary></indexterm>
<programlisting language="C"><link linkend="bool"><returnvalue>bool</returnvalue></link>
qrcodegen_isNumeric (<parameter>const <link linkend="char"><type>char</type></link> *text</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-calcSegmentBufferSize" role="function">
<title>qrcodegen_calcSegmentBufferSize&#160;()</title>
<indexterm zone="qrcodegen-calcSegmentBufferSize"><primary>qrcodegen_calcSegmentBufferSize</primary></indexterm>
<programlisting language="C"><link linkend="size-t"><returnvalue>size_t</returnvalue></link>
qrcodegen_calcSegmentBufferSize (<parameter><type>enum qrcodegen_Mode</type> mode</parameter>,
                                 <parameter><link linkend="size-t"><type>size_t</type></link> numChars</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-makeBytes" role="function">
<title>qrcodegen_makeBytes&#160;()</title>
<indexterm zone="qrcodegen-makeBytes"><primary>qrcodegen_makeBytes</primary></indexterm>
<programlisting language="C">struct <link linkend="qrcodegen-Segment"><returnvalue>qrcodegen_Segment</returnvalue></link>
qrcodegen_makeBytes (<parameter>const <link linkend="uint8-t"><type>uint8_t</type></link> data[]</parameter>,
                     <parameter><link linkend="size-t"><type>size_t</type></link> len</parameter>,
                     <parameter><link linkend="uint8-t"><type>uint8_t</type></link> buf[]</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-makeNumeric" role="function">
<title>qrcodegen_makeNumeric&#160;()</title>
<indexterm zone="qrcodegen-makeNumeric"><primary>qrcodegen_makeNumeric</primary></indexterm>
<programlisting language="C">struct <link linkend="qrcodegen-Segment"><returnvalue>qrcodegen_Segment</returnvalue></link>
qrcodegen_makeNumeric (<parameter>const <link linkend="char"><type>char</type></link> *digits</parameter>,
                       <parameter><link linkend="uint8-t"><type>uint8_t</type></link> buf[]</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-makeAlphanumeric" role="function">
<title>qrcodegen_makeAlphanumeric&#160;()</title>
<indexterm zone="qrcodegen-makeAlphanumeric"><primary>qrcodegen_makeAlphanumeric</primary></indexterm>
<programlisting language="C">struct <link linkend="qrcodegen-Segment"><returnvalue>qrcodegen_Segment</returnvalue></link>
qrcodegen_makeAlphanumeric (<parameter>const <link linkend="char"><type>char</type></link> *text</parameter>,
                            <parameter><link linkend="uint8-t"><type>uint8_t</type></link> buf[]</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-makeEci" role="function">
<title>qrcodegen_makeEci&#160;()</title>
<indexterm zone="qrcodegen-makeEci"><primary>qrcodegen_makeEci</primary></indexterm>
<programlisting language="C">struct <link linkend="qrcodegen-Segment"><returnvalue>qrcodegen_Segment</returnvalue></link>
qrcodegen_makeEci (<parameter>long <link linkend="assignVal"><type>assignVal</type></link> Param1</parameter>,
                   <parameter><link linkend="uint8-t"><type>uint8_t</type></link> buf[]</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-getSize" role="function">
<title>qrcodegen_getSize&#160;()</title>
<indexterm zone="qrcodegen-getSize"><primary>qrcodegen_getSize</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
qrcodegen_getSize (<parameter>const <link linkend="uint8-t"><type>uint8_t</type></link> qrcode[]</parameter>);</programlisting>
</refsect2>
<refsect2 id="qrcodegen-getModule" role="function">
<title>qrcodegen_getModule&#160;()</title>
<indexterm zone="qrcodegen-getModule"><primary>qrcodegen_getModule</primary></indexterm>
<programlisting language="C"><link linkend="bool"><returnvalue>bool</returnvalue></link>
qrcodegen_getModule (<parameter>const <link linkend="uint8-t"><type>uint8_t</type></link> qrcode[]</parameter>,
                     <parameter><link linkend="int"><type>int</type></link> x</parameter>,
                     <parameter><link linkend="int"><type>int</type></link> y</parameter>);</programlisting>
</refsect2>

</refsect1>
<refsect1 id="libnma-qrcodegen.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="qrcodegen-Ecc" role="enum">
<title>enum qrcodegen_Ecc</title>
<indexterm zone="qrcodegen-Ecc"><primary>qrcodegen_Ecc</primary></indexterm>
<refsect3 id="qrcodegen-Ecc.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Ecc-LOW">qrcodegen_Ecc_LOW</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Ecc-MEDIUM">qrcodegen_Ecc_MEDIUM</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Ecc-QUARTILE">qrcodegen_Ecc_QUARTILE</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Ecc-HIGH">qrcodegen_Ecc_HIGH</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="qrcodegen-Mask" role="enum">
<title>enum qrcodegen_Mask</title>
<indexterm zone="qrcodegen-Mask"><primary>qrcodegen_Mask</primary></indexterm>
<refsect3 id="qrcodegen-Mask.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mask-AUTO">qrcodegen_Mask_AUTO</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mask-0">qrcodegen_Mask_0</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mask-1">qrcodegen_Mask_1</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mask-2">qrcodegen_Mask_2</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mask-3">qrcodegen_Mask_3</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mask-4">qrcodegen_Mask_4</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mask-5">qrcodegen_Mask_5</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mask-6">qrcodegen_Mask_6</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mask-7">qrcodegen_Mask_7</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="qrcodegen-Mode" role="enum">
<title>enum qrcodegen_Mode</title>
<indexterm zone="qrcodegen-Mode"><primary>qrcodegen_Mode</primary></indexterm>
<refsect3 id="qrcodegen-Mode.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mode-NUMERIC">qrcodegen_Mode_NUMERIC</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mode-ALPHANUMERIC">qrcodegen_Mode_ALPHANUMERIC</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mode-BYTE">qrcodegen_Mode_BYTE</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mode-KANJI">qrcodegen_Mode_KANJI</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="qrcodegen-Mode-ECI">qrcodegen_Mode_ECI</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="qrcodegen-Segment" role="struct">
<title>struct qrcodegen_Segment</title>
<indexterm zone="qrcodegen-Segment"><primary>qrcodegen_Segment</primary></indexterm>
<programlisting language="C">struct qrcodegen_Segment {
	// The mode indicator of this segment.
	enum qrcodegen_Mode mode;

	// The length of this segment's unencoded data. Measured in characters for
	// numeric/alphanumeric/kanji mode, bytes for byte mode, and 0 for ECI mode.
	// Always zero or positive. Not the same as the data's bit length.
	int numChars;

	// The data bits of this segment, packed in bitwise big endian.
	// Can be null if the bit length is zero.
	uint8_t *data;

	// The number of valid data bits used in the buffer. Requires
	// 0 &lt;= bitLength &lt;= 32767, and bitLength &lt;= (capacity of data array) * 8.
	// The character count (numChars) must agree with the mode and the bit buffer length.
	int bitLength;
};
</programlisting>
</refsect2>
<refsect2 id="qrcodegen-VERSION-MIN" role="macro">
<title>qrcodegen_VERSION_MIN</title>
<indexterm zone="qrcodegen-VERSION-MIN"><primary>qrcodegen_VERSION_MIN</primary></indexterm>
<programlisting language="C">#define qrcodegen_VERSION_MIN   1  // The minimum version number supported in the QR Code Model 2 standard
</programlisting>
</refsect2>
<refsect2 id="qrcodegen-VERSION-MAX" role="macro">
<title>qrcodegen_VERSION_MAX</title>
<indexterm zone="qrcodegen-VERSION-MAX"><primary>qrcodegen_VERSION_MAX</primary></indexterm>
<programlisting language="C">#define qrcodegen_VERSION_MAX  40  // The maximum version number supported in the QR Code Model 2 standard
</programlisting>
</refsect2>
<refsect2 id="qrcodegen-BUFFER-LEN-MAX" role="macro">
<title>qrcodegen_BUFFER_LEN_MAX</title>
<indexterm zone="qrcodegen-BUFFER-LEN-MAX"><primary>qrcodegen_BUFFER_LEN_MAX</primary></indexterm>
<programlisting language="C">#define qrcodegen_BUFFER_LEN_MAX  qrcodegen_BUFFER_LEN_FOR_VERSION(qrcodegen_VERSION_MAX)
</programlisting>
</refsect2>

</refsect1>

</refentry>
